// Please do not edit this file.
// go run *.go

package main

import (
	"log"
)

type State int

const (
	Wait State = iota
	Run
	Stop
)

type Eod int

const (
	Entry Eod = iota
	Do
	Exit
)

var eod Eod
var currentState State

func (m *xxModel) task1!!!() {
	switch m.currentState {
	case Wait:
		if eod == Entry {
			WaitEntry()
			eod = Do
		}
		if eod == Do {
			waitDo()
			if pushButtonCond() {
				currentState = Run
				log.Println("State is changed: Wait to Run")
				eod = Entry
			}
		}
	case Run:
		if eod == Entry {
			runEntry()
			eod = Do
		}
		if eod == Do {
			runDo()
			if pushButtonCond() {
				currentState = Stop
				log.Println("State is changed: Run to Stop")
				eod = Entry
			}
		}
	case Stop:
		if eod == Entry {
			stopEntry()
			eod = Do
		}
		if eod == Do {
			stopDo()
			if pushButtonCond() {
				currentState = Wait
				log.Println("State is changed: Stop to Wait")
				eod = Entry
			}
		}
	}
}

func init() {
	currentState = Wait
	eod = Entry
}
