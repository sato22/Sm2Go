// Please do not edit this file.
// Please run "gofmt -w /path/to/output.go"
// go run *.go

package main

import (
	"fmt"
)

type State int

const (
	Heat State = iota
	Unheat
	Stop
)

type Eod int

const (
	Entry Eod = iota
	Do
	Exit
)

var input string
var eod Eod
var current_state State

func state_transition() {
	switch current_state {
	case Heat:
		if eod == Entry {
			Heat_Entry()
			eod = Do
		}
		if eod == Do {
			Heat_Do()
			if higher_limit_Cond() {
				current_state = Unheat
				fmt.Println("State is changed: Heat to Unheat")
				eod = Entry
			}
			if power_off_Cond() { // else if
				current_state = Stop
				fmt.Println("State is changed: Heat to Stop")
				eod = Entry
			}
		}
	case Unheat:
		if eod == Entry {
			Unheat_Entry()
			eod = Do
		}
		if eod == Do {
			Unheat_Do()
			if lower_limit_Cond() {
				current_state = Heat
				fmt.Println("State is changed: Unheat to Heat")
				eod = Entry
			}
			if power_off_Cond() {
				current_state = Stop
				fmt.Println("State is changed: Unheat to Stop")
				eod = Entry
			}
		}
	}
}

func init() {
	current_state = Heat
	eod = Entry
}
