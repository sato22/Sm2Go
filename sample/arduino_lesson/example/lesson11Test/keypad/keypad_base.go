// Please do not edit this file.

package keypad

// package name to import

type State int

const (
	On State = iota
	OffEntered
	OffEmpty
)

type Eod int

const (
	Entry Eod = iota
	Do
	Exit
)

var eod Eod
var current State

func Task() {
	switch current {
	case On:
		if eod == Entry {
			onEntry()
			eod = Do
		}
		if eod == Do {
			onDo()
			if time3secCond() {
				current = OffEmpty
				if debug {
					logger.Println("State is changed: On to OffEmpty")
				}
				eod = Exit
			}
		}
		if eod == Exit {
			onExit()
			eod = Entry
		}
	case OffEntered:
		if eod == Entry {
			offenteredEntry()
			eod = Do
		}
		if eod == Do {
			offenteredDo()
			if correctKeyCond() {
				current = On
				if debug {
					logger.Println("State is changed: OffEntered to On")
				}
				eod = Exit
			}
			if keyFailedCond() {
				current = OffEmpty
				if debug {
					logger.Println("State is changed: OffEntered to OffEmpty")
				}
				eod = Exit
			}
		}
		if eod == Exit {
			offenteredExit()
			eod = Entry
		}
	case OffEntered:
		if eod == Entry {
			offenteredEntry()
			eod = Do
		}
		if eod == Do {
			offenteredDo()
		}
		if eod == Exit {
			offenteredExit()
			eod = Entry
		}
	case OffEmpty:
		if eod == Entry {
			offemptyEntry()
			eod = Do
		}
		if eod == Do {
			offemptyDo()
			if keyEnteredCond() {
				current = OffEntered
				if debug {
					logger.Println("State is changed: OffEmpty to OffEntered")
				}
				eod = Exit
			}
		}
		if eod == Exit {
			offemptyExit()
			eod = Entry
		}
	}
}

func init() {
	current = On
	eod = Entry
}
