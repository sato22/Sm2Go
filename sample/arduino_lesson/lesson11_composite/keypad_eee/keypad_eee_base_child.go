// Please do not edit this file.

package keypad_eee

type ChildState int

const (
	OffEmpty ChildState = iota
	OffEntered
)

var childEod Eod
var currentChildState ChildState

func StepChild() {
	switch currentChildState {
	case OffEmpty:
		if childEod == Entry {
			offemptyEntry()
			childEod = Do
		}
		if childEod == Do {
			offemptyDo()
			if keyEnteredCond() {
				currentChildState = OffEntered
				if debug {
					logger.Println("State is changed: OffEmpty to OffEntered")
				}
				childEod = Exit
			}
		}
		if childEod == Exit {
			offemptyExit()
			childEod = Entry
		}
	case OffEntered:
		if childEod == Entry {
			offenteredEntry()
			childEod = Do
		}
		if childEod == Do {
			offenteredDo()
			if keyFailedCond() {
				currentChildState = OffEmpty
				if debug {
					logger.Println("State is changed: OffEntered to OffEmpty")
				}
				childEod = Exit
			}
		}
		if childEod == Exit {
			offenteredExit()
			childEod = Entry
		}
	}
}

func initChild() {
	currentChildState = OffEmpty
	childEod = Entry
}
