// Please do not edit this file.

package keypad_eee

type ChildState int

const (
	OffEmpty ChildState = iota
	OffEntry
)

// // Entryあたりはこのままでも
// type Eod int

// const (
// 	Entry Eod = iota
// 	Do
// 	Exit
// )

var childeod Eod
var currentChildState ChildState

func StepChild() {
	switch currentChildState {
	case OffEmpty:
		if eod == Entry {
			offEmptyEntry()
			eod = Do
		}
		if eod == Do {
			offEmptyDo()
			if time3secCond() {
				currentState = Off
				if debug {
					logger.Println("State is changed: On to Off")
				}
				eod = Exit
			}
		}
		if eod == Exit {
			offEmptyExit()
			eod = Entry
		}
	case OffEntry:
		if eod == Entry {
			offEntryEntry()
			eod = Do
		}
		if eod == Do {
			offEntryDo()

			if correctKeyCond() {
				currentState = On
				if debug {
					logger.Println("State is changed: Off to On")
				}
				eod = Exit
			}
		}
		if eod == Exit {
			offEntryExit()
			eod = Entry
		}
	}
}

func initChild() {
	currentChildState = OffEmpty
	childeod = Entry
}
