// Please do not edit this file.

package aircond

import (
	"log"
)

type State int

const (
	Stop State = iota
	Run
)

type Eod int

const (
	Entry Eod = iota
	Do
	Exit
)

var eod Eod
var current State

func task() {
	switch current {
	case Stop:
		if eod == Entry {
			stopEntry()
			eod = Do
		}
		if eod == Do {
			stopDo()
			if startDriveCond() {
				current = Run
				log.Println("State is changed: Stop to Run")
				eod = Entry
			}
		}
		if eod == Exit {
			stopExit()
			eod = Entry
		}
	case Run:
		if eod == Entry {
			runEntry()
			eod = Do
		}
		if eod == Do {
			runDo()
			if stopDriveCond() {
				current = Stop
				log.Println("State is changed: Run to Stop")
				eod = Entry
			}

			
		}
		if eod == Exit {
			runExit()
			eod = Entry
		}
	}
}

func init() {
	current = Stop
	eod = Entry
}

// goroutine でtask()とtask2()を動かす
// 一つのステートマシンに三つのファイル
// tinygoで検証
// ハードウェアに実装するにあたって
/* ポートの入力と　キーボードの入力を繋げる フレームワーク


*/

func task2() {
	switch current {
	case Cool:
		if eod == Entry {
			coolEntry()
			eod = Do
		}
		if eod == Do {
			coolDo()
			if (current == Run) && modeChangeCond() {
				current = Heat
				log.Println("State is changed: Cool to Heat")
				eod = Entry
			}
		}
		if eod == Exit {
			coolExit()
			eod = Entry
		}
	case Heat:
		if eod == Entry {
			heatEntry()
			eod = Do
		}
		if eod == Do {
			heatDo()
			if modeChangeCond() {
				current = Dry
				log.Println("State is changed: Heat to Dry")
				eod = Entry
			}
		}
		if eod == Exit {
			heatExit()
			eod = Entry
		}
	case Dry:
		if eod == Entry {
			dryEntry()
			eod = Do
		}
		if eod == Do {
			dryDo()
			if modeChangeCond() {
				current = Cool
				log.Println("State is changed: Dry to Cool")
				eod = Entry
			}
		}
		if eod == Exit {
			dryExit()
			eod = Entry
		}
	}
}

func init() {
	current = Cool
	eod = Entry
}

func driveState02(){
	// sub

	switch sub:
	case Cool:
	//...
}
